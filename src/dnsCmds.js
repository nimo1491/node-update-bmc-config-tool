import chalk from 'chalk';
import childProcess from 'child_process';
import { convertToAscii, singleLineString } from './utils';

export default function setDnsCmds(ipAddr, username, password, hostname) {
  const asciiHostname = convertToAscii(hostname);

  // Disable DNS Service
  console.log(chalk.blue('Disable DNS Service'));
  if (process.env.NODE_ENV === 'development') {
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x09 0x00 0x00`
    );
  } else {
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x09 0x00 0x00`,
      { stdio: [0, 1, 2] }
    );
  }

  // Set Hostname
  console.log(chalk.blue(`Set Hostname: ${hostname}`));
  if (process.env.NODE_ENV === 'development') {
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x01 0x00 0x00 0x11
      ${asciiHostname} 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`
    );
  } else {
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x01 0x00 0x00 0x11
      ${asciiHostname} 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`,
      { stdio: [0, 1, 2] }
    );
  }

  // Set Domain Name
  console.log(chalk.blue('Set Domain Name'));
  if (process.env.NODE_ENV === 'development') {
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x03 0x00 0x00 0x00 0x00 0x0b`
    );
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x04 0x01
      0x74 0x73 0x6d 0x63 0x2e 0x63 0x6f 0x6d 0x2e 0x74 0x77 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`
    );
  } else {
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x03 0x00 0x00 0x00 0x00 0x0b`,
      { stdio: [0, 1, 2] }
    );
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x04 0x01
      0x74 0x73 0x6d 0x63 0x2e 0x63 0x6f 0x6d 0x2e 0x74 0x77 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`,
      { stdio: [0, 1, 2] }
    );
  }

  // Set DNS Server to 10.10.10.10 and 10.10.11.11
  console.log(chalk.blue('Set DNS Server'));
  if (process.env.NODE_ENV === 'development') {
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x05 0x00 0x00 0x00 0x00`
    );
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x01 0x0a 0x0a 0x0a 0x0a`
    );
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x02 0x0a 0x0a 0x0b 0x0b`
    );
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x03
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`
    );
  } else {
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x05 0x00 0x00 0x00 0x00`,
      { stdio: [0, 1, 2] }
    );
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x01 0x0a 0x0a 0x0a 0x0a`,
      { stdio: [0, 1, 2] }
    );
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x02 0x0a 0x0a 0x0b 0x0b`,
      { stdio: [0, 1, 2] }
    );
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x06 0x03
      0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00`,
      { stdio: [0, 1, 2] }
    );
  }

  // Enable and Restart DNS Service
  console.log(chalk.blue('Enable and Restart DNS Service'));
  if (process.env.NODE_ENV === 'development') {
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x09 0x00 0x01`
    );
    console.log(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x07 0x00`
    );
  } else {
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x09 0x00 0x01`,
      { stdio: [0, 1, 2] }
    );
    childProcess.execSync(singleLineString`ipmitool -H ${ipAddr} -U ${username} -P ${password}
      raw 0x32 0x6c 0x07 0x00`,
      { stdio: [0, 1, 2] }
    );
  }
}
